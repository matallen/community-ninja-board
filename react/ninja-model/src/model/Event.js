/**
 * Giveback Ninja
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Event model module.
 * @module model/Event
 * @version 2.0.0
 */
class Event {
    /**
     * Constructs a new <code>Event</code>.
     * @alias module:model/Event
     * @param type {String} The type of event
     * @param timestamp {Date} The timestamp when the event occurred
     */
    constructor(type, timestamp) { 
        
        Event.initialize(this, type, timestamp);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type, timestamp) { 
        obj['type'] = type;
        obj['timestamp'] = timestamp;
    }

    /**
     * Constructs a <code>Event</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Event} obj Optional instance to populate.
     * @return {module:model/Event} The populated <code>Event</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Event();

            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The user to which the event applied
 * @member {String} username
 */
Event.prototype['username'] = undefined;

/**
 * The type of event
 * @member {String} type
 */
Event.prototype['type'] = undefined;

/**
 * The timestamp when the event occurred
 * @member {Date} timestamp
 */
Event.prototype['timestamp'] = undefined;

/**
 * Describes the event.
 * @member {String} description
 */
Event.prototype['description'] = undefined;






export default Event;

