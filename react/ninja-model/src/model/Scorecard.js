/**
 * Giveback Ninja
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Scorecard model module.
 * @module model/Scorecard
 * @version 2.0.0
 */
class Scorecard {
    /**
     * Constructs a new <code>Scorecard</code>.
     * All stats around a user that are used to calculate Ninja Belt level.
     * @alias module:model/Scorecard
     * @param username {String} The unique user id.
     */
    constructor(username) { 
        
        Scorecard.initialize(this, username);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, username) { 
        obj['username'] = username;
    }

    /**
     * Constructs a <code>Scorecard</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Scorecard} obj Optional instance to populate.
     * @return {module:model/Scorecard} The populated <code>Scorecard</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Scorecard();

            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('level')) {
                obj['level'] = ApiClient.convertToType(data['level'], 'String');
            }
            if (data.hasOwnProperty('pointsToNextLevel')) {
                obj['pointsToNextLevel'] = ApiClient.convertToType(data['pointsToNextLevel'], 'Number');
            }
            if (data.hasOwnProperty('nextLevel')) {
                obj['nextLevel'] = ApiClient.convertToType(data['nextLevel'], 'String');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], {'String': 'Number'});
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * The unique user id.
 * @member {String} username
 */
Scorecard.prototype['username'] = undefined;

/**
 * The current level of the ninja
 * @member {String} level
 */
Scorecard.prototype['level'] = undefined;

/**
 * The number of points needed to achieve the next level. 0 indicates that there is no higher level. 
 * @member {Number} pointsToNextLevel
 */
Scorecard.prototype['pointsToNextLevel'] = undefined;

/**
 * The level that can be reached next. An empty string indicates that the current level is the highest. 
 * @member {String} nextLevel
 */
Scorecard.prototype['nextLevel'] = undefined;

/**
 * Score for each pool
 * @member {Object.<String, Number>} details
 */
Scorecard.prototype['details'] = undefined;

/**
 * The current score
 * @member {Number} score
 */
Scorecard.prototype['score'] = undefined;






export default Scorecard;

