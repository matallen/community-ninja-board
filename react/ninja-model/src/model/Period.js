/**
 * Giveback Ninja
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Record from './Record';

/**
 * The Period model module.
 * @module model/Period
 * @version 2.0.0
 */
class Period {
    /**
     * Constructs a new <code>Period</code>.
     * The period for which the history was computed. Usually Fiscal Year
     * @alias module:model/Period
     * @param name {String} Unique name of the period
     * @param cumulatedOn {Date} When the period was computed
     * @param records {Object.<String, module:model/Record>} The records for this period
     */
    constructor(name, cumulatedOn, records) { 
        
        Period.initialize(this, name, cumulatedOn, records);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, cumulatedOn, records) { 
        obj['name'] = name;
        obj['cumulatedOn'] = cumulatedOn;
        obj['records'] = records;
    }

    /**
     * Constructs a <code>Period</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Period} obj Optional instance to populate.
     * @return {module:model/Period} The populated <code>Period</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Period();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('cumulatedOn')) {
                obj['cumulatedOn'] = ApiClient.convertToType(data['cumulatedOn'], 'Date');
            }
            if (data.hasOwnProperty('records')) {
                obj['records'] = ApiClient.convertToType(data['records'], {'String': Record});
            }
        }
        return obj;
    }


}

/**
 * Unique name of the period
 * @member {String} name
 */
Period.prototype['name'] = undefined;

/**
 * When the period was computed
 * @member {Date} cumulatedOn
 */
Period.prototype['cumulatedOn'] = undefined;

/**
 * The records for this period
 * @member {Object.<String, module:model/Record>} records
 */
Period.prototype['records'] = undefined;






export default Period;

