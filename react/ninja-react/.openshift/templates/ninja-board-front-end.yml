apiVersion: v1
kind: Template
metadata:
  name: ninja-board-front-end
  annotations:
    iconClass: icon-jboss
    tags: nodejs, react, web app
    description: Build the front-end Ninja Board App
labels:
  application: ${APPLICATION_NAME}
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${BASE_IMAGE_NAME}
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: 'centos/nginx-112-centos7:latest'
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    source:
      binary: {}
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: ${BASE_IMAGE_NAME}:latest
      type: Source
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-dev-pipeline
  spec:
    source:
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      jenkinsPipelineStrategy:
        env:
          - name: APPLICATION_NAME
            value: ${APPLICATION_NAME}
          - name: SOURCE_REPOSITORY_URL
            value: ${SOURCE_REPOSITORY_URL}
          - name: SOURCE_REPOSITORY_REF
            value: ${SOURCE_REPOSITORY_REF}
          - name: DEV_NAMESPACE
            value: ${DEV_NAMESPACE}
        jenkinsfilePath: ${SOURCE_REPOSITORY_DIR}/Jenkinsfile
      type: JenkinsPipeline
    triggers:
      - type: ConfigChange
- apiVersion: v1
  data:
    config.js: 'window.USER_MANAGEMENT_API_URL="http://localhost:8080";'
  kind: ConfigMap
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: front-end-configmap
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      application: ${APPLICATION_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          image: ${APPLICATION_NAME}
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          resources:
            limits:
              memory: 112Mi
            requests:
              memory: 64Mi
          volumeMounts:
            - mountPath: /opt/app-root/src/config
              name: front-end-configmap
              readOnly: true
        volumes:
        - configMap:
            defaultMode: 420
            name: front-end-configmap
          name: front-end-configmap
      metadata:
        labels:
          application: ${APPLICATION_NAME}
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}:latest
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: http
      port: 8080
    selector:
      application: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: ${APPLICATION_NAME}
parameters:
  - name: APPLICATION_NAME
    description: The name for the application.
    required: true
    value: ninja-board-front-end
  - name: BASE_IMAGE_NAME
    description: The name for the base image.
    displayName: Base image name name
    required: true
    value: ninja-board-front-end-base
  - name: SOURCE_REPOSITORY_URL
    description: The source URL for the application
    displayName: Source URL
    value: https://github.com/redhat-cop/ninja-board
    required: true
  - name: SOURCE_REPOSITORY_REF
    description: The branch name for the application
    displayName: Source Branch
    value: v2
    required: true
  - name: SOURCE_REPOSITORY_DIR
    description: The location within the source repo of the application
    displayName: Source Directory
    value: react/ninja-react
    required: true
  - description: Name of the Development Namespace
    name: DEV_NAMESPACE
    required: true
    value: ninja-board-dev
